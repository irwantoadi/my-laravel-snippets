{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"//console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"Table column type foreignId": {
		"scope": "php",
		"prefix": "$table->foreignId",
		"body": [
			"$$table->foreignId('${1}')->constrained();"
		],
		"description": "Create table column type foreignId on schema table"
	},
	
	"Table column type string": {
		"scope": "php",
		"prefix": "$table->string",
		"body": [
			"$$table->string('${1}');"
		],
		"description": "Create table column type string on schema table"
	},
	
	"Table column type int": {
		"scope": "php",
		"prefix": "$table->int",
		"body": [
			"$$table->int('${1}');"
		],
		"description": "Create table column name and type int on schema table"
	},
	
	"Table column type boolean": {
		"scope": "php",
		"prefix": "$table->boolean",
		"body": [
			"$$table->boolean('${1}');"
		],
		"description": "Create table column name and type on schema table"
	},
}